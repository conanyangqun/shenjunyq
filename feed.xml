<feed xmlns="http://www.w3.org/2005/Atom"> <id>http://www.shenjunyq.xyz/</id><title>神骏的blog</title><subtitle>一个关于生信的blog。 A blog about bioinformatics.</subtitle> <updated>2021-09-06T21:22:55+08:00</updated> <author> <name>conanyangqun</name> <uri>http://www.shenjunyq.xyz/</uri> </author><link rel="self" type="application/atom+xml" href="http://www.shenjunyq.xyz/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="http://www.shenjunyq.xyz/"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 conanyangqun </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>安装VEP</title><link href="http://www.shenjunyq.xyz/posts/%E5%AE%89%E8%A3%85vep/" rel="alternate" type="text/html" title="安装VEP" /><published>2021-09-06T21:20:00+08:00</published> <updated>2021-09-06T21:20:00+08:00</updated> <id>http://www.shenjunyq.xyz/posts/%E5%AE%89%E8%A3%85vep/</id> <content src="http://www.shenjunyq.xyz/posts/%E5%AE%89%E8%A3%85vep/" /> <author> <name>shenjunyq</name> </author> <summary> 安装VEP vep是ensembl开发的用于变异注释的软件，每3个月发布一个release。目前版本为R104。官方的文档中记录了普通安装、docker安装两种方式。ensembl的blog中简单介绍了singularity安装。另外，在bioconda中有一个ensembl-vep，不知是否为官方发布。 故事 大概2年前，初次接触VEP，在HPC环境下安装这个软件。当时的OS为Centos6.5，非root权限用户，按照普通安装的方式进行，踩过了不少的坑。例如网络环境不好导致无法下载对应的包，缺少相应的perl模块等，下载cache耗费时间长。依旧记得安装过程需要从github下载几个必须组件，但是由于网络原因一直无法成功下载。最后是通过边手动下载覆盖边安装来一步一步解决掉的。整个环境部署，大概耗费了2-3d的时间。 现在，只需要一条命令singularity build ... </summary> </entry> <entry><title>snakemake歧义rules</title><link href="http://www.shenjunyq.xyz/posts/snakemake%E6%AD%A7%E4%B9%89rules/" rel="alternate" type="text/html" title="snakemake歧义rules" /><published>2021-09-02T12:30:00+08:00</published> <updated>2021-09-02T12:30:00+08:00</updated> <id>http://www.shenjunyq.xyz/posts/snakemake%E6%AD%A7%E4%B9%89rules/</id> <content src="http://www.shenjunyq.xyz/posts/snakemake%E6%AD%A7%E4%B9%89rules/" /> <author> <name>shenjunyq</name> </author> <summary> snakemake歧义rules 最近在用snakemake改写一个PB HiFi数据的分析流程，遇到了snakemake的歧义rules的问题。被困扰了许久后，最终发现原来是一个没注意的小问题导致的。 歧义rules 歧义rules（ambiguous rules）指两个rules可以产生相同的输出文件，snakemake无法决定使用哪个，从而报AmbiguousRuleException错误。 例如以下示例： rule all: input: [ f"results/hg002/dv/hg002.dv.{suffix}" for suffix in ['vcf.gz', 'vcf.gz.tbi'] ] rule expected: output: vcf = "results/{sample}/dv/{sampl... </summary> </entry> <entry><title>源码安装singularity_ce</title><link href="http://www.shenjunyq.xyz/posts/%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85singularity/" rel="alternate" type="text/html" title="源码安装singularity_ce" /><published>2021-09-01T23:25:00+08:00</published> <updated>2021-09-01T23:25:00+08:00</updated> <id>http://www.shenjunyq.xyz/posts/%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85singularity/</id> <content src="http://www.shenjunyq.xyz/posts/%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85singularity/" /> <author> <name>shenjunyq</name> </author> <summary> 源码安装singularity CE 请自行检查系统是否符合安装singularity CE的要求，本文只是记录安装过程。 singulairty从3.8版本开始，分成CE版本和Pro版本，越来越像docker。 本文展示在Ubuntu系统下安装singularity CE v3.8.2版本，全程使用root权限。 首先安装必要的依赖。 apt-get update &amp;amp;&amp;amp; sudo apt-get install -y \ build-essential \ uuid-dev \ libgpgme-dev \ squashfs-tools \ libseccomp-dev \ wget \ curl \ pkg-config \ git \ cryptsetup-bin ... </summary> </entry> <entry><title>这个AA有点头疼</title><link href="http://www.shenjunyq.xyz/posts/%E8%BF%99%E4%B8%AAAA%E6%9C%89%E7%82%B9%E5%A4%B4%E7%96%BC/" rel="alternate" type="text/html" title="这个AA有点头疼" /><published>2021-08-31T21:18:00+08:00</published> <updated>2021-08-31T21:18:00+08:00</updated> <id>http://www.shenjunyq.xyz/posts/%E8%BF%99%E4%B8%AAAA%E6%9C%89%E7%82%B9%E5%A4%B4%E7%96%BC/</id> <content src="http://www.shenjunyq.xyz/posts/%E8%BF%99%E4%B8%AAAA%E6%9C%89%E7%82%B9%E5%A4%B4%E7%96%BC/" /> <author> <name>conanyangqun</name> </author> <summary> 这个AA有点头疼 就是一次对AA制的无聊畅想，挖了一个坑。 AA制，指活动的参与者事前约定“平均分担所需费用”。通常用于饮食聚会饭局或旅游等活动场合。1 缘起，最近组内开始考虑聚餐，AA制。按照总金额，算出平均值，收钱。 大家均等支付，没啥变化，有什么意思嘛！于是，午休时，突然想给AA制增加点随机性，于是提出了以下一个想法：假如在计算每个人支付的金额时，引入一定的随机性，同时还要保证每个人最终支付的金额两两之差在可容忍的一个范围内。即： 设定一个容忍系数a。对于一次AA，假设参与人员有n人，总金额为$S$。求每个人支付的金额为$s_i$，要求满足： 变种1：根据总金额，动态调整容忍系数。一般来说总金额越高，容忍系数越小，从而保证每个人支付的差额尽量小。 最初的想法是写个AA的程序，考虑引入点随机性进去。怎奈有点菜，还不知道怎么算。有想法的大佬，麻烦disqu... </summary> </entry> <entry><title>我与生信</title><link href="http://www.shenjunyq.xyz/posts/%E6%88%91%E4%B8%8E%E7%94%9F%E4%BF%A1/" rel="alternate" type="text/html" title="我与生信" /><published>2021-08-27T00:06:00+08:00</published> <updated>2021-08-27T00:06:00+08:00</updated> <id>http://www.shenjunyq.xyz/posts/%E6%88%91%E4%B8%8E%E7%94%9F%E4%BF%A1/</id> <content src="http://www.shenjunyq.xyz/posts/%E6%88%91%E4%B8%8E%E7%94%9F%E4%BF%A1/" /> <author> <name>shenjunyq</name> </author> <summary> 我与生信 一篇回忆文章，想想自己在测序方面都学了些啥。 突然想写一篇回忆文章，梳理一下自己跟生信这个话题的结缘，看看自己的技术栈中都学了些啥。 最早与“测序”这个话题有关的，大概要追溯到2010年、2011年左右。因为对计算机有着盲目的兴趣，加上本身是学的生物学专业，所以，就考虑学”生物信息学”。那个时候听的最多的，还是blast之类的，像NGS测序并没有停过。更好笑的的是，那个时候只接触过win。听师兄们说，要搞生信，先学linux。于是打算学linux。当然那个时候连linux都没接触过，也被人嘲笑：“你要学linux，连bash都不知道是啥”。 学linux，看的第一本书就是《鸟哥的linux私房菜基础篇第三版》，时间是在2010年、2011年左右。没有买实体书，看的电子版（那个时候早就习惯看电子书了）。直到现在，这也是我看过的为数不多的linux的书籍。当时把... </summary> </entry> </feed>
